readRDS("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/out/LPA_full_data.RDS")
lpa <- readRDS("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/out/LPA_full_data.RDS")
View(lpa)
knitr::opts_chunk$set(echo = TRUE)
lpa_models <- readRDS("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/out/lpa_models.RDS")
View(lpa_models)
lpa_model_eval <- readRDS("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/out/lpa_model_eval.RDS")
View(lpa_model_eval)
lpa$data %>% view()
library(tidyverse)
lpa$data %>% view()
#Results from the OPTICS clustering.
optics_models <- readRDS("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/out/optics_models.RDS")
View(optics_models)
View(lpa)
lpa
summary(lpa)
library(mclust)
summary(lpa)
#Results from the Latent Profile Analysis of the whole sample is imported from the saved RDS files.
lpa_full_data <- readRDS("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/out/LPA_full_data.RDS")
rm(lpa)
save.image("C:/Users/gniel/OneDrive - MSB Medical School Berlin/Project special issue/LPA_analysis/total sample's analysis/.RData")
#load the results from the optics clustering
optics_models <- readRDS("C:/Users/Rebecca/Documents/GitHub/LPA_analysis/out/optics_models.RDS")
#load data
data <- haven::read_spss("./data/data raw/dataE_clear5 2209.sav") %>% select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr)
colnames(data) <- c("uid", "sex_drive", "csbd", "ppcs", "soi_r_me", "social_anxiety", "lon", "mvs", "attraction_to_children")
library(tidyverse)
#load data
data <- haven::read_spss("./data/data raw/dataE_clear5 2209.sav") %>% select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr)
colnames(data) <- c("uid", "sex_drive", "csbd", "ppcs", "soi_r_me", "social_anxiety", "lon", "mvs", "attraction_to_children")
predict(newdata=data[data$uid %in% (optics_models[i,] %>% pull(test_fold_uids) %>%unlist()),] %>% select(-uid),
object =optics_models$DBSCAN_clustering[[i]],
data = data[optics_models$folds[[i]],] %>% select(-uid))}))
save.image("C:/Users/Rebecca/Documents/GitHub/LPA_analysis/total sample's analysis/.RData")
#Load RData file
load("./.RData")
#Do not show code chunks in the knitted document
knitr::opts_chunk$set(echo=F, warning=F, message=F)
#Declare vector of required packages
packages <- c("tidyverse", "readr")
#Load function to check whether required packages are installed & load required packages
source("./functions/check_required_packages.R")
check_required_packages(packages)
lapply(packages, require, character.only=T)
#Clean up
rm(packages)
##DATA##
data <- haven::read_spss("./data/data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr)
#create long data frame for plotting, including only the relevant variables
plotd_all <- data %>% select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr) %>% pivot_longer(cols=sexdrive2:attr, names_to="var", values_to="score")
#create a table with the quantiles for each variable (except CSBD & PPCS_6)
quant <- as.data.frame(t(do.call(rbind.data.frame, (lapply(c("lon", "meffort", "mvalue", "sexdrive2", "socialanx"), function(x){parse_number(gsub(",.*$", "", levels(cut_number(as.data.frame(data_females)[, x], 4))))})))))
#create long data frame for plotting, including only the relevant variables
plotd_all <- data %>% select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr) %>% pivot_longer(cols=sexdrive2:attr, names_to="var", values_to="score")
#create a table with the quantiles for each variable (except CSBD & PPCS_6)
quant <- as.data.frame(t(do.call(rbind.data.frame, (lapply(c("lon", "meffort", "mvalue", "sexdrive2", "socialanx"), function(x){parse_number(gsub(",.*$", "", levels(cut_number(as.data.frame(data)[, x], 4))))})))))
#call on function
source("./functions/flat_violin.R")
#plot
ggplot(plotd_all %>% filter(var!="attr"), aes(x=as.factor(var), y=score, fill=var)) +
geom_flat_violin(scale="width") +
scale_fill_grey(start=.5, end=.9, aesthetics = "fill") +
geom_dotplot(binaxis="y", dotsize=.04, stackdir="down", binwidth=.3, position=position_nudge(-.025)) +
guides(fill="none") +
scale_x_discrete(labels=c("CSBD"="Compulsive sex.", "lon"="Loneliness", "meffort"="Mating effort", "mvalue"="Mate value", "PPCS_6"="Probl. porn use", "sexdrive2"="Sex drive", "socialanx"="Social anxiety")) +
labs(x="", y="Value") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
#plot attraction to children separately
ggplot(plotd_all %>% filter(var=="attr"), aes(x=score)) +
geom_bar() +
theme_classic() +
labs(x="Attraction to children", y="Count")
#Load RData file
load("./.RData")
#Do not show code chunks in the knitted document
knitr::opts_chunk$set(echo=F, warning=F, message=F)
#Declare vector of required packages
packages <- c("tidyverse", "readr")
#Load function to check whether required packages are installed & load required packages
source("./functions/check_required_packages.R")
check_required_packages(packages)
lapply(packages, require, character.only=T)
#Clean up
rm(packages)
##DATA##
data <- haven::read_spss("./data/data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr)
#create long data frame for plotting, including only the relevant variables
plotd_all <- data %>% select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr) %>% pivot_longer(cols=sexdrive2:attr, names_to="var", values_to="score")
#call on function
source("./functions/flat_violin.R")
#plot
ggplot(plotd_all %>% filter(var!="attr"), aes(x=as.factor(var), y=score, fill=var)) +
geom_flat_violin(scale="width") +
scale_fill_grey(start=.5, end=.9, aesthetics = "fill") +
geom_dotplot(binaxis="y", dotsize=.04, stackdir="down", binwidth=.3, position=position_nudge(-.025)) +
guides(fill="none") +
scale_x_discrete(labels=c("CSBD"="Compulsive sex.", "lon"="Loneliness", "meffort"="Mating effort", "mvalue"="Mate value", "PPCS_6"="Probl. porn use", "sexdrive2"="Sex drive", "socialanx"="Social anxiety")) +
labs(x="", y="Value") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
#plot attraction to children separately
ggplot(plotd_all %>% filter(var=="attr"), aes(x=score)) +
geom_bar() +
theme_classic() +
labs(x="Attraction to children", y="Count")
knitr::opts_chunk$set(echo=F, warning=F, message=F)
library(tidyverse)
data <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r"))
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE)),2)
ggcorrplot::ggcorrplot(corr_mat, hc.order = TRUE, outline.col = "white")
?ggcorrplot
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00"), lab_size=3)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00"), lab_size=3) +
theme_classic()
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE)),2)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="")
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE)),2)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9))
View(corr_mat)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
# labs(x="", y="") +
# theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9))
colnames(corr_mat)
colnames(corr_mat) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat) <- colnames(corr_mat)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9))
element_text()
?element_text()
p.mat <- cor_pma(data %>% select(-CASE))
p.mat <- cor_pmat(data %>% select(-CASE))
p.mat <- ggcorrplot::cor_pmat(data %>% select(-CASE))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00"), p.mat = p.mat, insig="blank") +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9, face = c('bold', rep("plain", 24))))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 8), rep('bold', 3))))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 7), rep('bold', 3))))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))))
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))),
axis.text.y=element_text(face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))))
knitr::opts_chunk$set(echo=F, warning=F, message=F)
library(tidyverse)
data_m <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 2) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_m <- round(cor(data_m %>% select(-CASE)), 2)
#p.mat <- ggcorrplot::cor_pmat(data %>% select(-CASE))
colnames(corr_mat_m) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_m) <- colnames(corr_mat_m)
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))),
axis.text.y=element_text(face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))))
data <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r"))
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE)), 2)
#p.mat <- ggcorrplot::cor_pmat(data %>% select(-CASE))
colnames(corr_mat) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat) <- colnames(corr_mat)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))),
axis.text.y=element_text(face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))))
data_m <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 2) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_m <- round(cor(data_m %>% select(-CASE)), 2)
#p.mat <- ggcorrplot::cor_pmat(data %>% select(-CASE))
colnames(corr_mat_m) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_m) <- colnames(corr_mat_m)
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('plain', 6), rep("bold", 7), 'plain', "bold", "plain")),
axis.text.y=element_text(face = c(rep('plain', 6), rep("bold", 7), 'plain', "bold", "plain")))
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c("plain", "bold", 'plain', rep("bold", 7), rep('plain', 6))),
axis.text.y=element_text(face = c(rep('plain', 6), rep("bold", 7), 'plain', "bold", "plain")))
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))),
axis.text.y=element_text(face = c(rep('plain', 6), rep("bold", 7), 'plain', "bold", "plain")))
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))),
axis.text.y=element_text(face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))))
data_f <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 1) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_f <- round(cor(data_f %>% select(-CASE)), 2)
colnames(corr_mat_f) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_f) <- colnames(corr_mat_f)
ggcorrplot::ggcorrplot(corr_mat_f, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))),
axis.text.y=element_text(face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))))
ggcorrplot::ggcorrplot(corr_mat_f, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 2), rep('plain', 3), "bold", rep('plain', 6), "bold", rep("plain", 7),
"bold", "plain", rep("bold, 3"))),
axis.text.y=element_text(face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))))
ggcorrplot::ggcorrplot(corr_mat_f, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 2), rep('plain', 3), "bold", rep('plain', 6), "bold", rep("plain", 7),
"bold", "plain", rep("bold", 3))),
axis.text.y=element_text(face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))))
data_f <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 1) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_f <- round(cor(data_f %>% select(-CASE)), 2)
colnames(corr_mat_f) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_f) <- colnames(corr_mat_f)
ggcorrplot::ggcorrplot(corr_mat_f, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 2), rep('plain', 3), "bold", rep('plain', 6), "bold", rep("plain", 7),
"bold", "plain", rep("bold", 3))),
axis.text.y=element_text(face = c(rep("bold", 2), rep('plain', 3), "bold", rep('plain', 6), "bold", rep("plain", 7),
"bold", "plain", rep("bold", 3))))
?cor
data_m <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 2) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_m <- round(cor(data_m %>% select(-CASE), method="spearman"), 2)
colnames(corr_mat_m) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_m) <- colnames(corr_mat_m)
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))),
axis.text.y=element_text(face = c(rep("plain", 10), "bold", 'plain', rep("bold", 7), rep('plain', 6))))
data <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r"))
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE)), method="spearman", 2)
data <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r"))
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE), method="spearman"), 2)
#p.mat <- ggcorrplot::cor_pmat(data %>% select(-CASE))
colnames(corr_mat) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat) <- colnames(corr_mat)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))),
axis.text.y=element_text(face = c(rep('bold', 2), rep("plain", 4), rep('bold', 2), rep("plain", 4), "bold",
rep("plain", 9), rep('bold', 3))))
data <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r"))
# creating correlation matrix
corr_mat <- round(cor(data %>% select(-CASE), method="spearman"), 2)
#p.mat <- ggcorrplot::cor_pmat(data %>% select(-CASE))
colnames(corr_mat) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat) <- colnames(corr_mat)
ggcorrplot::ggcorrplot(corr_mat, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")
#, p.mat = p.mat, insig="blank"
) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep('bold', 2), rep("plain", 4), rep('bold', 5), rep("plain", 11), "bold",
rep("plain", 2))),
axis.text.y=element_text(face = c(rep('bold', 2), rep("plain", 4), rep('bold', 5), rep("plain", 11), "bold",
rep("plain", 2))))
data_m <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 2) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_m <- round(cor(data_m %>% select(-CASE), method="spearman"), 2)
colnames(corr_mat_m) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_m) <- colnames(corr_mat_m)
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 2), rep('plain', 15), "bold", rep('plain', 2), rep("bold, 5"))),
axis.text.y=element_text(face = c(rep("bold", 2), rep('plain', 15), "bold", rep('plain', 2), rep("bold, 5"))))
data_m <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 2) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_m <- round(cor(data_m %>% select(-CASE), method="spearman"), 2)
colnames(corr_mat_m) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_m) <- colnames(corr_mat_m)
ggcorrplot::ggcorrplot(corr_mat_m, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 2), rep('plain', 15), "bold", rep('plain', 2), rep("bold", 5))),
axis.text.y=element_text(face = c(rep("bold", 2), rep('plain', 15), "bold", rep('plain', 2), rep("bold", 5))))
data_f <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 1) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_f <- round(cor(data_f %>% select(-CASE), method="spearman"), 2)
colnames(corr_mat_f) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_f) <- colnames(corr_mat_f)
ggcorrplot::ggcorrplot(corr_mat_f, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 2), rep('plain', 3), "bold", rep('plain', 6), "bold", rep("plain", 7),
"bold", "plain", rep("bold", 3))),
axis.text.y=element_text(face = c(rep("bold", 2), rep('plain', 3), "bold", rep('plain', 6), "bold", rep("plain", 7),
"bold", "plain", rep("bold", 3))))
data_f <- haven::read_spss("./data raw/dataE_clear5 2209.sav") %>% dplyr::select(CASE, gender, sexdrive2, CSBD, PPCS_6, meffort, socialanx, lon, mvalue, attr, starts_with("Y") & ends_with("r")) %>% filter(gender == 1) %>% dplyr::select(-gender)
# creating correlation matrix
corr_mat_f <- round(cor(data_f %>% select(-CASE), method="spearman"), 2)
colnames(corr_mat_f) <- c("Sex drive", "Compulsive sex.", "Probl. porn use", "Mating effort", "Social anxiety", "Loneliness", "Mate value", "Attraction to children", "Speed", "DUI", "Rob", "Kill", "Prostitute", "Rape", "Zoophilia", "Public porn", "Porn child", "Porn child darknet", "Chat child", "Gift child", "Sex child", "Porn YP", "Chat YP", "Gift YP", "Sex YP")
rownames(corr_mat_f) <- colnames(corr_mat_f)
ggcorrplot::ggcorrplot(corr_mat_f, hc.order=T, outline.col="white", legend.title="Correlation", colors=c("#0072B2", "white", "#D55E00")) +
labs(x="", y="") +
theme_classic() +
theme(axis.text.x=element_text(angle=50, hjust=1, size=9,
face = c(rep("bold", 5), rep('plain', 6), "bold", rep('plain', 11), rep("bold", 2))),
axis.text.y=element_text(face = c(rep("bold", 5), rep('plain', 6), "bold", rep('plain', 11), rep("bold", 2))))
