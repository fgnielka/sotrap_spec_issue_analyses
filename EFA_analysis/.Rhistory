knitr::opts_chunk$set(echo = TRUE)
set.seed(42)
#Declare vector of required packages
packages <- c("tidyverse", "readr", "psych")
#load function to check whether required packages are installed.
source("./functions/check_required_packages.R")
check_required_packages(packages)
#load required packages
lapply(packages, require, character.only=T)
data <- haven::read_spss("./data/data_raw/dataE_clear5 2209.sav") %>% select(CASE, starts_with("Y")) %>% select(CASE, ends_with("r"))
efa_3 <- psych::fa(corr, nfactors=3, rotation="promax")
corr <- psych::polychoric(data %>% select(-CASE))
View(corr)
corr <- psych::polychoric(data %>% select(-CASE))$rho
View(corr)
efa_3 <- psych::fa(corr, nfactors=3, rotation="promax")
efa_3 <- psych::fa(corr, nfactors=3, rotation="Promax")
efa_3 <- psych::fa(data %>% select(-CASE), nfactors=3, rotation="promax")
View(corr)
corr %>% class()
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3)
View(efa_3)
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3,  rotation="Promax")
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3,  rotation="promax")
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3,  rotation="promax", cor="poly")
tetrachoric
?tetrachoric
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3,  rotation="promax", cor="poly", correct=.5)
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3,  rotation="bentlerQ", cor="poly")
efa_3 <- psych::fa(r= data %>% select(-CASE), nfactors=3,  rotation="cluster", cor="poly")
View(data)
efa_3 <- psych::fa(r= corr, nfactors=3,  rotation="cluster", cor="poly")
efa_3 <- psych::fa(r= corr, nfactors=3, cor="poly")
print(efa_3, cut=.4, sort=T)
efa_3 <- psych::fa(r= corr, nfactors=3, rotation="promax", fm="minres")
efa_3 <- psych::fa(r= corr, nfactors=3, rotate="promax", fm="minres")
efa_2 <- psych::fa(r=corr, nfactors=2, rotate="promax")
print(efa_2, cut=.4, sort=T)
print(efa_3, cut=.4, sort=T)
broom::tidy(efa_3)
?psych::factor.scores()
psych::factor.scores(data %>% select(CASE), efa_2, method="Thurstone")
psych::factor.scores(data %>% select(CASE) %>% as.matrix(), efa_2, method="Thurstone")
psych::factor.scores(data %>% select(CASE) %>% as.matrix(), efa_2, method=c("Thurstone"))
psych::factor.scores(data %>% select(CASE) %>% as.matrix(), f=efa_2, method=c("Thurstone"))
psych::factor.scores(x=data %>% select(CASE) %>% as.matrix(), f=efa_2, method=c("Thurstone"))
psych::factor.scores(x=data %>% select(CASE) %>% as.matrix(), f=efa_2)
efa_3.1 <- irt.fa(psych::polychoric(data %>% select(-CASE)), nfactors=3, rotate="promax", fm="minres")
efa_3.1
efa_2.1 <- irt.fa(psych::polychoric(data %>% select(-CASE)), nfactors=2, rotate="promax", fm="minres")
efa_2.1
rm(efa_2.1)
rm(efa_3.1)
knitr::opts_chunk$set(echo = TRUE)
set.seed(42)
#Declare vector of required packages
packages <- c("tidyverse", "readr", "psych")
#load function to check whether required packages are installed.
source("./functions/check_required_packages.R")
check_required_packages(packages)
#load required packages
lapply(packages, require, character.only=T)
efa_2
summary(efa_2)
print(efa_2, cut=.4, sort=T)
print(efa_2, cut=.4, sort=T)
print(efa_3, cut=.4, sort=T)
install.packages("MBESS")
library(MBESS)
data %>% colnames()
data %>% select(Y_proclSpeed_r, Y_proclDui_r, Y_proclRob_r, Y_proclKill_r)
data %>% select(Y_proclSpeed_r, Y_proclDui_r, Y_proclRob_r, Y_proclKill_r) %>% ci.reliability(B=100)
data %>% select(Y_proclSpeed_r, Y_proclDui_r, Y_proclRob_r, Y_proclKill_r) %>% ci.reliability(B=10000)
data %>% select(Y_proclSpeed_r, Y_proclDui_r, Y_proclRob_r, Y_proclKill_r) %>% ci.reliability(B=10000, interval.type = "bsi")
data %>% select(Y_proclSpeed_r, Y_proclDui_r, Y_proclRob_r, Y_proclKill_r) %>% ci.reliability(B=100, interval.type = "bsi")
View(data)
View(data)
data %>% select(Y_proclPornChild_r, Y_proclPornChildDarknet_r, Y_proclChatChild_r, Y_proclGiftChild_r) %>% ci.reliability(B=100, interval.type = "bsi")
data %>% select(-c("Y_proclSpeed_r", "Y_proclDui_r", "Y_proclRob_r", "Y_proclKill_r", "Y_proclProstitute_r")) %>% ci.reliability(B=100, interval.type = "bsi")
data %>% select(-c("Y_proclSpeed_r", "Y_proclDui_r", "Y_proclRob_r", "Y_proclKill_r", "Y_proclProstitute_r", "CASE")) %>% ci.reliability(B=100, interval.type = "bsi")
omega_sexfactor_3sol <- data %>% select(-c("Y_proclSpeed_r", "Y_proclDui_r", "Y_proclRob_r", "Y_proclKill_r", "Y_proclProstitute_r", "CASE")) %>% ci.reliability(B=100, interval.type = "bsi")
omega_sexfactor_3sol <- data %>% select(-c("Y_proclSpeed_r", "Y_proclDui_r", "Y_proclRob_r", "Y_proclKill_r", "Y_proclProstitute_r", "CASE")) %>% ci.reliability(B=10000, interval.type = "bsi")
View(omega_sexfactor_3sol)
