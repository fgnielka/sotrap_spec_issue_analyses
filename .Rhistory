plot_prob(lca_final_model_m) +
scale_fill_grey(start = 0.9, end = 0.5, aesthetics = "fill") +
scale_x_discrete(labels=c("attr"="Sexual interest in children", "CSBD"="CSBD-7", "lon"="LON", "meffort"="Mating effort", "mvalue"="Mating value", "PPCS_6"="PPCS-6", "sexdrive2"="Sex drive", "socialanx"="Social anxiety")) +
labs(x="") +
theme_classic() +
theme(axis.text.x=element_text(angle=60, hjust=1, size=10))
plot_prob(lca_final_model_m) +
scale_fill_grey(start = 0.9, end = 0.5, aesthetics = "fill") +
scale_x_discrete(labels=c("attr"="Sexual interest in children", "CSBD"="CSBD-7", "lon"="LON", "meffort"="Mating effort", "mvalue"="Mating value", "PPCS_6"="PPCS-6", "sexdrive2"="Sex drive", "socialanx"="Social anxiety")) +
labs(x="") +
theme_classic() +
theme(axis.text.x=element_text(angle=70, hjust=1, size=10))
#Do not show code chunks in the knitted document
knitr::opts_chunk$set(echo=F, warning=F, message=F)
#For reproducible results
set.seed(100)
#Turn off scientific notification
options(scipen=999)
#Declare vector of required packages
packages <- c("tidyverse", "readr", "tidySEM", "MOTE", "flextable", "logistf")
#Load function to check whether required packages are installed & load required packages
source("./functions/check_required_packages.R")
check_required_packages(packages)
lapply(packages, require, character.only=T)
#Clean up
rm(packages)
#######ATTENTION!!!
#At this point we load a pre-saved .RData file in which the environment is saved. That makes the code less reproducible, but removing the eval=F specifications in all code blocks will make that possible
load(".RData")
results <- cbind(Proclivity = c("Chat with a child", "Chat with a young person", "Drive under influence", "Make a gift to a child", "Make a gift to a young person", "Kill someone", "Watch CSEM", "Watch CSEM on the darknet", "Watch porn with a young person", "Have sex with a prostitute", "Watch porn in public", "Rape someone", "Rob a bank", "Have sex with a child", "Have sex with a young person", "Drive over the speed limit", "Have sex with an animal"), BCH_results_parameters %>% select(ends_with("total_0.01"), starts_with("b") & ends_with("0.01"), starts_with("p") & ends_with("0.01"), starts_with("ci") & ends_with("0.01")))
#Create extra columns with CIs
results$CI_intercept <- paste0("[", format(round(exp(results$ci_l_intercept_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_intercept_0.01), 2), nsmall=2), "]")
results$CI_class1 <- paste0("[", format(round(exp(results$ci_l_predicted_class_1_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_predicted_class_1_0.01), 2), nsmall=2), "]")
results$CI_class2 <- paste0("[", format(round(exp(results$ci_l_predicted_class_2_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_predicted_class_2_0.01), 2), nsmall=2), "]")
#Add odds for each class
results <- results %>% mutate(odds_predicted_class_1_0.01 = exp(results$b_intercept_0.01)*exp(results$b_predicted_class_1_0.01),
odds_predicted_class_2_0.01 = exp(results$b_intercept_0.01)*exp(results$b_predicted_class_2_0.01),
odds_predicted_class_3_0.01 = exp(results$b_intercept_0.01))
View(results)
plot_results <- results %>% pivot_longer(cols=starts_with("odd"), names_to="var", values_to="score")
View(plot_results)
plot_results <- results %>% select(starts_with="odds") %>% pivot_longer(names_to="class", values_to="odds")
results <- cbind(Proclivity = c("Chat with a child", "Chat with a young person", "Drive under influence", "Make a gift to a child", "Make a gift to a young person", "Kill someone", "Watch CSEM", "Watch CSEM on the darknet", "Watch porn with a young person", "Have sex with a prostitute", "Watch porn in public", "Rape someone", "Rob a bank", "Have sex with a child", "Have sex with a young person", "Drive over the speed limit", "Have sex with an animal"), BCH_results_parameters %>% select(ends_with("total_0.01"), starts_with("b") & ends_with("0.01"), starts_with("p") & ends_with("0.01"), starts_with("ci") & ends_with("0.01")))
#Create extra columns with CIs
results$CI_intercept <- paste0("[", format(round(exp(results$ci_l_intercept_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_intercept_0.01), 2), nsmall=2), "]")
results$CI_class1 <- paste0("[", format(round(exp(results$ci_l_predicted_class_1_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_predicted_class_1_0.01), 2), nsmall=2), "]")
results$CI_class2 <- paste0("[", format(round(exp(results$ci_l_predicted_class_2_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_predicted_class_2_0.01), 2), nsmall=2), "]")
#Add odds for each class
results <- results %>% mutate(odds_predicted_class_1_0.01 = exp(results$b_intercept_0.01)*exp(results$b_predicted_class_1_0.01),
odds_predicted_class_2_0.01 = exp(results$b_intercept_0.01)*exp(results$b_predicted_class_2_0.01),
odds_predicted_class_3_0.01 = exp(results$b_intercept_0.01))
plot_results <- results %>% select(starts_with="odds") %>% pivot_longer(names_to="class", values_to="odds")
plot_results <- results %>% select(starts_with("odds")) %>% pivot_longer(names_to="class", values_to="odds")
View(results)
results %>% select(starts_with("odds"))
results %>% select(starts_with("odds")) %>% pivot_longer(names_to="class", values_to="odds")
plot_results <- results %>% select(Proclivity, starts_with("odds")) %>% pivot_longer(cols=starts_with("odds"), names_to="class", values_to="odds")
View(plot_results)
plot_results$class <- rep(1:3, 17)
View(plot_results)
#Do not show code chunks in the knitted document
knitr::opts_chunk$set(echo=F, warning=F, message=F)
#For reproducible results
set.seed(100)
#Turn off scientific notification
options(scipen=999)
#Declare vector of required packages
packages <- c("tidyverse", "readr", "tidySEM", "MOTE", "flextable", "logistf")
#Load function to check whether required packages are installed & load required packages
source("./functions/check_required_packages.R")
check_required_packages(packages)
lapply(packages, require, character.only=T)
#Clean up
rm(packages)
#######ATTENTION!!!
#At this point we load a pre-saved .RData file in which the environment is saved. That makes the code less reproducible, but removing the eval=F specifications in all code blocks will make that possible
load(".RData")
results <- cbind(Proclivity = c("Chat with a child", "Chat with a young person", "Drive under influence", "Make a gift to a child", "Make a gift to a young person", "Kill someone", "Watch CSEM", "Watch CSEM on the darknet", "Watch porn with a young person", "Have sex with a prostitute", "Watch porn in public", "Rape someone", "Rob a bank", "Have sex with a child", "Have sex with a young person", "Drive over the speed limit", "Have sex with an animal"), BCH_results_parameters %>% select(ends_with("total_0.01"), starts_with("b") & ends_with("0.01"), starts_with("p") & ends_with("0.01"), starts_with("ci") & ends_with("0.01")))
#Create extra columns with CIs
results$CI_intercept <- paste0("[", format(round(exp(results$ci_l_intercept_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_intercept_0.01), 2), nsmall=2), "]")
results$CI_class1 <- paste0("[", format(round(exp(results$ci_l_predicted_class_1_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_predicted_class_1_0.01), 2), nsmall=2), "]")
results$CI_class2 <- paste0("[", format(round(exp(results$ci_l_predicted_class_2_0.01), 2), nsmall=2), ", ", format(round(exp(results$ci_r_predicted_class_2_0.01), 2), nsmall=2), "]")
#Add odds for each class
results <- results %>% mutate(odds_predicted_class_1_0.01 = exp(results$b_intercept_0.01)*exp(results$b_predicted_class_1_0.01),
odds_predicted_class_2_0.01 = exp(results$b_intercept_0.01)*exp(results$b_predicted_class_2_0.01),
odds_predicted_class_3_0.01 = exp(results$b_intercept_0.01))
plot_results <- results %>% select(Proclivity, starts_with("odds")) %>% pivot_longer(cols=starts_with("odds"), names_to="class", values_to="odds")
plot_results$class <- rep(1:3, 17)
View(plot_results)
ggplot(plot_results, aes(x=class, y=odds, group=Proclivity)) +
geom_bar(stat="identity")
ggplot(plot_results, aes(x=class, y=odds)) +
geom_bar(stat="identity")
ggplot(plot_results, aes(x=class, y=odds, group=Proclivity)) +
geom_bar(stat="count")
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class, fill=class)) +
geom_bar(stat="identity", position="dodge")
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class, linetype=class)) +
geom_line()
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class)) +
geom_line()
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class, fill=class)) +
facet_grid(Proclivity~.) +
geom_bar(stat="identity", position="dodge")
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class, fill=class)) +
facet_grid(rows=Proclivity) +
geom_bar(stat="identity", position="dodge")
ggplot(plot_results, aes(x=class, y=odds)) +
facet_grid(rows=vars(Proclivity)) +
geom_bar(stat="identity", position="dodge")
ggplot(plot_results, aes(x=class, y=odds, group=class, fill=class)) +
facet_grid(~Proclivity) +
geom_bar(stat="identity", position="dodge")
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
scale_fill_grey(start=.5, end=.9) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1)
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
scale_fill_grey(start=.5, end=.9) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1)
})
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
scale_fill_manual(values=c("#CCCCCC", "#999999", "#666666"))
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
scale_fill_manual(values=c("#CCCCCC", "#999999", "#666666"), labels=NULL) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=class)) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
plot_results <- results %>%
select(Proclivity,starts_with("odds")) %>%
filter(odds_predicted_class_1_0.01 < 1 & odds_predicted_class_2_0.01 < 1 & odds_predicted_class_3_0.01 < 1) %>%
pivot_longer(cols=starts_with("odds"), names_to="class", values_to="odds")
plot_results$class <- rep(1:3, nrow(plot_results)/3)
lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
library(ggpubr)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic()
})
ggarrange(plots, ncol=7, nrow=7)
ggarrange(plotlist=plots, ncol=7, nrow=2)
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme(legend=NULL) +
theme_classic()
})
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme(legend.position="none") +
theme_classic()
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
theme_classic() +
theme(legend.position="none", axis.ticks.x = c(0.0, 0.5, 1.0))
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
?theme
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +4
scale_x_discrete(breaks=c(0.0, 0.5, 1.0)) +
theme_classic() +
theme(legend.position="none")
})
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +4
scale_x_discrete(breaks=c("0.0", "0.5", "1.0")) +
theme_classic() +
theme(legend.position="none")
})
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
scale_x_discrete(breaks=c("0.0", "0.5", "1.0")) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
scale_x_discrete(breaks=c(0.0, 0.5, 1.0)) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
scale_y_discrete(breaks=c(0.0, 0.5, 1.0)) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
ylim(0,1) +
scale_y_continuous(breaks=c(0.0, 0.5, 1.0)) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
scale_y_continuous(breaks=c(0.0, 0.5, 1.0)) +
ylim(0,1) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
?scale_y_continuous
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
scale_y_continuous(breaks=c(0.0, 0.5, 1.0), limits=c(0,1)) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=plots, ncol=4, nrow=4)
plot_results_2 <- results %>%
select(Proclivity,starts_with("odds")) %>%
filter(odds_predicted_class_1_0.01 > 1 | odds_predicted_class_2_0.01 > 1 | odds_predicted_class_3_0.01 > 1) %>%
pivot_longer(cols=starts_with("odds"), names_to="class", values_to="odds")
plot_results_2$class <- rep(1:3, nrow(plot_results)/3)
plot_results_2$class <- rep(1:3, nrow(plot_results_2)/3)
lapply(plot_results_2$Proclivity %>% unique(), function(x){
ggplot(plot_results_2 %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
#scale_y_continuous(breaks=c(0.0, 0.5, 1.0), limits=c(0,1)) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=2)
plots_2 <- lapply(plot_results_2$Proclivity %>% unique(), function(x){
ggplot(plot_results_2 %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
#scale_y_continuous(breaks=c(0.0, 0.5, 1.0), limits=c(0,1)) +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
plots[[2]]
plots[[2]] <- plots[[2]] + labels(x="")
plots[[2]] <- plots[[2]] + labels(xlab="")
?labels
?xlab
plots[[2]] <- plots[[2]] + xlab("")
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
t <- ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
scale_y_continuous(breaks=c(0.0, 0.5, 1.0), limits=c(0,1)) +
xlab("") +
ylab("") +
theme_classic() +
theme(legend.position="none")
plots_2 <- lapply(plot_results_2$Proclivity %>% unique(), function(x){
ggplot(plot_results_2 %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
xlab("") +
ylab("") +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
plots <- lapply(plot_results$Proclivity %>% unique(), function(x){
ggplot(plot_results %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
scale_y_continuous(breaks=c(0.0, 0.5, 1.0), limits=c(0,1)) +
xlab("") +
ylab("") +
theme_classic() +
theme(legend.position="none")
})
plots_2 <- lapply(plot_results_2$Proclivity %>% unique(), function(x){
ggplot(plot_results_2 %>% filter(Proclivity == x), aes(x=class, y=odds, fill=as.factor(class))) +
scale_fill_manual(name=NULL, values=c("#CCCCCC", "#999999", "#666666")) +
geom_bar(stat="identity", position="dodge") +
xlab("") +
ylab("") +
theme_classic() +
theme(legend.position="none")
})
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
plots[[1]] <- plots[[1]] + ylab("Odds")
plots[[7]] <- plots[[7]] + yla("Odds")
plots[[7]] <- plots[[7]] + ylab("Odds")
plots[[1]] <- plots[[1]] + ylab("Odds")
plots[[7]] <- plots[[7]] + ylab("Odds")
plots[[12]] <- plots[[12]] + xlab("Class")
plots[[13]] <- plots[[13]] + xlab("Class") + ylab("Odds")
plots[[14]] <- plots[[14]] + xlab("Class")
plots[[15]] <- plots[[15]] + xlab("Class")
plots_2[[1]] <- plots_2[[1]] + xlab("Class")
plots_2[[2]] <- plots_2[[2]] + xlab("Class")
plots_2[[3]] <- plots_2[[3]] + xlab("Class")
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class)) +
geom_line()
ggplot(plot_results, aes(x=Proclivity, y=odds, group=class, linetype=class)) +
geom_line()
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line()
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
scale_linetype_manual(name=NULL, values=c("solid", "dashed", "dotted"), labels=c("Class 1", "Class 2", "Class 3"))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
ylab("Odds")
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
ylab("Odds") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))
?scale_shape_manual
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c("4", "5", "16")) +
ylab("Odds") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c("4", "5", "16"), labels=c("Class 1", "Class 2", "Class 3")) +
ylab("Odds") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
gplot(plot_results_2, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggplot(plot_results_2, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point() +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0, 1, 3)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0, 1, 3)) +
guides(shape="none") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggarrange(lp1, lp1, ncol=1, nrow=2)
lp_1 <- ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0,  3, 1)) +
guides(shape="none") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
lp_2 <- ggplot(plot_results_2, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0,  3, 1)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
ggarrange(lp_1, lp_2, ncol=1, nrow=2)
#Arrange all barplots in a grid
ggarrange(plotlist=c(plots, plots_2), ncol=6, nrow=3)
#Alternative: line plots
#Odds < 1
ggplot(plot_results, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0,  3, 1)) +
guides(shape="none") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
#Odds > 1
ggplot(plot_results_2, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0,  3, 1)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
#Odds > 1
ggplot(plot_results_2, aes(x=Proclivity, y=odds, group=as.factor(class), linetype=as.factor(class))) +
geom_line() +
geom_point(aes(shape=as.factor(class))) +
scale_linetype_manual(name=NULL, values=c("dotted", "dashed", "solid"), labels=c("Class 1", "Class 2", "Class 3")) +
scale_shape_manual(name=NULL, values=c(0,  3, 1)) +
guides(shape="none") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1, size=8))
